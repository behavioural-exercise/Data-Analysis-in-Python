{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "320ab098",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d44f6db9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import time\n",
    "from selenium import webdriver as wb\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.common.by import By\n",
    "import re\n",
    "import pandas as pd\n",
    "from selenium.common.exceptions import NoSuchElementException\n",
    "from selenium.webdriver.common.keys import Keys"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b941530",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "52b38fde",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-2-ecb19686ed07>:23: DeprecationWarning: use options instead of chrome_options\n",
      "  br = wb.Chrome(service=s, chrome_options=options)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your Spotify login: lutanin001@gmail.com\n",
      "Enter your Spotify password: 300401elya100\n"
     ]
    }
   ],
   "source": [
    "options = wb.ChromeOptions()\n",
    "options.add_experimental_option('prefs', {'intl.accept_languages': 'en'})\n",
    "# код чувствителен к языку браузера. Если выставлен не английский язык,\n",
    "# а какой-то другой, то программа просто не сможет найти нужные элементы\n",
    "# по идее, верхняя функция как раз заставляет Selenium открывать браузер\n",
    "# в английском языке.\n",
    "\n",
    "# также - чрезвычайно важно не водить мышкой в области браузера при\n",
    "# работе кода, так как программа зависит от наведения на элементы\n",
    "# ведущие к раскрытию новых buttons\n",
    "\n",
    "# в худшем случае возможно, что у проверяющего так и не получится запустить\n",
    "# корректно код. В таком случае просто прикладываю видео с доказательствами\n",
    "# того, что код в принципе рабочий:\n",
    "# https://www.youtube.com/watch?v=7dW77AGdglM\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "s = Service('C:/Users/lutan/Documents/Python/chromedriver.exe') # укажите свой путь к сhromedriver!\n",
    "\n",
    "\n",
    "br = wb.Chrome(service=s, chrome_options=options)\n",
    "\n",
    "url = 'https://accounts.spotify.com/en/login'\n",
    "br.get(url)\n",
    "login = br.find_element(By.ID, 'login-username')\n",
    "login.click()\n",
    "login.send_keys(input('Enter your Spotify login: ')) # используйте lutanin001@gmail.com\n",
    "br.implicitly_wait(2)\n",
    "password = br.find_element(By.ID, 'login-password')\n",
    "password.click()\n",
    "password.send_keys(input('Enter your Spotify password: ')) # используйте 300401elya100\n",
    "br.implicitly_wait(2)\n",
    "br.find_element(By.ID, 'login-button').click()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20463f47",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ac8a1f60",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c028bd2e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a30ca591",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1cca858c",
   "metadata": {},
   "outputs": [],
   "source": [
    "url = 'https://vk.com/music/playlist/567405454_1_5254c3871c33fc7e71'\n",
    "br.get(url)\n",
    "time.sleep(2)\n",
    "r = br.page_source\n",
    "soup = BeautifulSoup(r, \"html.parser\")\n",
    "time.sleep(4)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "24f22022",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>oqbqbo</td>\n",
       "      <td>Night Perfume</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ballista</td>\n",
       "      <td>Vanitas</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Copiale</td>\n",
       "      <td>Shelter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Venetian Roses</td>\n",
       "      <td>The Fantasy of You and I</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ceramic Flowers  &amp; Sorim Byeon</td>\n",
       "      <td>Zeta Retculi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Fåntratt</td>\n",
       "      <td>Somna av i Snödrivan i Värmen av Den Stora Jul...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>Fåntratt</td>\n",
       "      <td>Saknad och Hänsoven, Björn-Erik Lundmark</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>Vatican Shadow</td>\n",
       "      <td>Weapons Inspection</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>Vatican Shadow</td>\n",
       "      <td>Chopper Crash Marines’ Names Released</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>Filmmaker</td>\n",
       "      <td>Encounters</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  0  \\\n",
       "0                            oqbqbo   \n",
       "1                          Ballista   \n",
       "2                           Copiale   \n",
       "3                    Venetian Roses   \n",
       "4    Ceramic Flowers  & Sorim Byeon   \n",
       "..                              ...   \n",
       "248                        Fåntratt   \n",
       "249                        Fåntratt   \n",
       "250                  Vatican Shadow   \n",
       "251                  Vatican Shadow   \n",
       "252                       Filmmaker   \n",
       "\n",
       "                                                     1  \n",
       "0                                        Night Perfume  \n",
       "1                                              Vanitas  \n",
       "2                                              Shelter  \n",
       "3                             The Fantasy of You and I  \n",
       "4                                         Zeta Retculi  \n",
       "..                                                 ...  \n",
       "248  Somna av i Snödrivan i Värmen av Den Stora Jul...  \n",
       "249           Saknad och Hänsoven, Björn-Erik Lundmark  \n",
       "250                                 Weapons Inspection  \n",
       "251              Chopper Crash Marines’ Names Released  \n",
       "252                                         Encounters  \n",
       "\n",
       "[253 rows x 2 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "artists = [i.text for i in soup.find_all('div', {'class':'audio_row__performers'})]\n",
    "titles = [i.text for i in soup.find_all('a', {'class':'audio_row__title_inner _audio_row__title_inner'})]\n",
    "\n",
    "tracks = [(i, j) for i, j in zip(artists, titles)]\n",
    "artists = [x[0] for x in tracks]\n",
    "titles = [x[1] for x in tracks]\n",
    "\n",
    "df = pd.DataFrame(tracks)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "856ce582",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'AL-90'"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "br.find_elements(By.XPATH, '//a[@draggable=\"true\" and @dir=\"auto\"]')[0].text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "5251f893",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'To Have Wings'"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "br.find_element(By.XPATH, '//div[@class=\"t_yrXoUO3qGsJS4Y6iXX standalone-ellipsis-one-line w_Xs9cRXMwmQHw8BpiID\"]').text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "1ea5639e",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-79-5cb00e4a015d>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mfoundtrack\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m<ipython-input-77-5264f83fa506>\u001b[0m in \u001b[0;36mfoundtrack\u001b[1;34m()\u001b[0m\n\u001b[0;32m     46\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     47\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mfoundtrack\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 48\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0msoup\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfind_all\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'a'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m{\u001b[0m\u001b[1;34m'draggable'\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtext\u001b[0m \u001b[1;33m+\u001b[0m \u001b[1;34m' '\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0mbr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfind_element\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mBy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mXPATH\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'//div[@class=\"t_yrXoUO3qGsJS4Y6iXX standalone-ellipsis-one-line w_Xs9cRXMwmQHw8BpiID\"]'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     49\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     50\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0martistID\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "foundtrack()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "76ce0ee1",
   "metadata": {},
   "outputs": [
    {
     "ename": "NoSuchElementException",
     "evalue": "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\" and @aria-label=\"Close\"]\"}\n  (Session info: chrome=97.0.4692.71)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00DE6903+2517251]\n\tOrdinal0 [0x00D7F8E1+2095329]\n\tOrdinal0 [0x00C82848+1058888]\n\tOrdinal0 [0x00CAD448+1233992]\n\tOrdinal0 [0x00CAD63B+1234491]\n\tOrdinal0 [0x00CD7812+1406994]\n\tOrdinal0 [0x00CC650A+1336586]\n\tOrdinal0 [0x00CD5BBF+1399743]\n\tOrdinal0 [0x00CC639B+1336219]\n\tOrdinal0 [0x00CA27A7+1189799]\n\tOrdinal0 [0x00CA3609+1193481]\n\tGetHandleVerifier [0x00F75904+1577972]\n\tGetHandleVerifier [0x01020B97+2279047]\n\tGetHandleVerifier [0x00E76D09+534521]\n\tGetHandleVerifier [0x00E75DB9+530601]\n\tOrdinal0 [0x00D84FF9+2117625]\n\tOrdinal0 [0x00D898A8+2136232]\n\tOrdinal0 [0x00D899E2+2136546]\n\tOrdinal0 [0x00D93541+2176321]\n\tBaseThreadInitThunk [0x75E15749+25]\n\tRtlGetAppContainerNamedObjectPath [0x7715A0D0+288]\n\tRtlGetAppContainerNamedObjectPath [0x7715A09E+238]\n",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNoSuchElementException\u001b[0m                    Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-20-135fefad218f>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mbr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'https://open.spotify.com/search'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mtime\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mbr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfind_element\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mBy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mXPATH\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'//button[@class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\" and @aria-label=\"Close\"]'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mclick\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;31m# в начале добавить\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      4\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mD:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\u001b[0m in \u001b[0;36mfind_element\u001b[1;34m(self, by, value)\u001b[0m\n\u001b[0;32m   1242\u001b[0m             \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'[name=\"%s\"]'\u001b[0m \u001b[1;33m%\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1243\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1244\u001b[1;33m         return self.execute(Command.FIND_ELEMENT, {\n\u001b[0m\u001b[0;32m   1245\u001b[0m             \u001b[1;34m'using'\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mby\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1246\u001b[0m             'value': value})['value']\n",
      "\u001b[1;32mD:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\u001b[0m in \u001b[0;36mexecute\u001b[1;34m(self, driver_command, params)\u001b[0m\n\u001b[0;32m    422\u001b[0m         \u001b[0mresponse\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcommand_executor\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdriver_command\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    423\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mresponse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 424\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0merror_handler\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcheck_response\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    425\u001b[0m             response['value'] = self._unwrap_value(\n\u001b[0;32m    426\u001b[0m                 response.get('value', None))\n",
      "\u001b[1;32mD:\\Program Files\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\u001b[0m in \u001b[0;36mcheck_response\u001b[1;34m(self, response)\u001b[0m\n\u001b[0;32m    245\u001b[0m                 \u001b[0malert_text\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'alert'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'text'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    246\u001b[0m             \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0malert_text\u001b[0m\u001b[1;33m)\u001b[0m  \u001b[1;31m# type: ignore[call-arg]  # mypy is not smart enough here\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 247\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    248\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    249\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_value_or_default\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mobj\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0mMapping\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0m_KT\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0m_VT\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0m_KT\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[1;33m:\u001b[0m \u001b[0m_VT\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m->\u001b[0m \u001b[0m_VT\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNoSuchElementException\u001b[0m: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[@class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\" and @aria-label=\"Close\"]\"}\n  (Session info: chrome=97.0.4692.71)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00DE6903+2517251]\n\tOrdinal0 [0x00D7F8E1+2095329]\n\tOrdinal0 [0x00C82848+1058888]\n\tOrdinal0 [0x00CAD448+1233992]\n\tOrdinal0 [0x00CAD63B+1234491]\n\tOrdinal0 [0x00CD7812+1406994]\n\tOrdinal0 [0x00CC650A+1336586]\n\tOrdinal0 [0x00CD5BBF+1399743]\n\tOrdinal0 [0x00CC639B+1336219]\n\tOrdinal0 [0x00CA27A7+1189799]\n\tOrdinal0 [0x00CA3609+1193481]\n\tGetHandleVerifier [0x00F75904+1577972]\n\tGetHandleVerifier [0x01020B97+2279047]\n\tGetHandleVerifier [0x00E76D09+534521]\n\tGetHandleVerifier [0x00E75DB9+530601]\n\tOrdinal0 [0x00D84FF9+2117625]\n\tOrdinal0 [0x00D898A8+2136232]\n\tOrdinal0 [0x00D899E2+2136546]\n\tOrdinal0 [0x00D93541+2176321]\n\tBaseThreadInitThunk [0x75E15749+25]\n\tRtlGetAppContainerNamedObjectPath [0x7715A0D0+288]\n\tRtlGetAppContainerNamedObjectPath [0x7715A09E+238]\n"
     ]
    }
   ],
   "source": [
    "br.get('https://open.spotify.com/search')\n",
    "time.sleep(1)\n",
    "br.find_element(By.XPATH, '//button[@class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\" and @aria-label=\"Close\"]').click() # в начале добавить\n",
    "\n",
    "    \n",
    "def like():\n",
    "    return br.find_element(By.XPATH, '//button[@type=\"button\" and @aria-label=\"Save to Your Library\"]').click()\n",
    "\n",
    "\n",
    "def like1():\n",
    "    global n\n",
    "    br.find_elements(By.XPATH, '//button[@type=\"button\" and @aria-haspopup=\"menu\" and @data-testid=\"more-button\" and @tabindex=\"-1\"]')[0].click()\n",
    "    br.find_elements(By.XPATH,(\"//span[text() = 'Add to playlist']\"))[0].click()\n",
    "    if n == 0:\n",
    "        br.find_elements(By.XPATH,(\"//span[text() = 'Add to new playlist']\"))[0].click()\n",
    "        n = n + 1\n",
    "        time.sleep(0.4)\n",
    "    else:\n",
    "        br.find_elements(By.XPATH, '//span[@class=\"ellipsis-one-line PDPsYDh4ntfQE3B4duUI Hi9FqPX1LNRRPf31tfA8\" and @as=\"span\" and @dir=\"auto\"]')[7].click()\n",
    "        time.sleep(0.1)\n",
    "    if len(br.find_elements(By.XPATH, '//button[@class=\"Qt5xfSWikz6CLU8Vobxs pWY0RsrzxnQm9yHtovC8\"]')) != 0:\n",
    "        br.find_element(By.XPATH, '//button[@class=\"Qt5xfSWikz6CLU8Vobxs pWY0RsrzxnQm9yHtovC8\"]').click()\n",
    "        summary['Artist'].append(f'{i[0]}')\n",
    "        summary['Title'].append(f'{i[1]}')\n",
    "        summary['Status'].append(f'Already added')\n",
    "        summary['Artist ID'].append(artistID())\n",
    "        print(f'Track {i[0]} {i[1]} is already added')\n",
    "    else:\n",
    "        summary['Artist'].append(soup.find_all('a', {'draggable':'true'})[0].text)\n",
    "        summary['Title'].append(soup.find_all('div', {'dir':'auto'})[1].text)\n",
    "        summary['Status'].append(f'Added')\n",
    "        summary['Artist ID'].append(artistID())\n",
    "        ID.append(artistID())\n",
    "        print(f'Track {i[0]} {i[1]} has been added')\n",
    "        time.sleep(0.1)\n",
    "        pass\n",
    "    n = n + 1\n",
    "\n",
    "def clear():\n",
    "    return br.find_element(By.XPATH, '//button[@aria-label=\"Clear search field\"]').click()\n",
    "\n",
    "def clear():\n",
    "    return br.find_element(By.XPATH, '//button[@aria-label=\"Clear search field\"]').click()\n",
    "\n",
    "button = br.find_element(By.TAG_NAME, 'input')\n",
    "\n",
    "def foundtrack():\n",
    "    return br.find_elements(By.XPATH, '//a[@draggable=\"true\" and @dir=\"auto\"]')[0].text + ' ' + br.find_element(By.XPATH, '//div[@class=\"t_yrXoUO3qGsJS4Y6iXX standalone-ellipsis-one-line w_Xs9cRXMwmQHw8BpiID\"]').text\n",
    "\n",
    "def artistID():\n",
    "    return soup.find_all('a', {'href': re.compile('/artist/')})[1].get('href').lstrip('/artist')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c096a78d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Do you want to move songs from VK by liking [1] or by saving them to a separate playlist [2]? >2\n",
      "Track oqbqbo Night Perfume has been added\n",
      "Track Ballista Vanitas was not found\n",
      "Track Copiale Shelter has been added\n",
      "Track Venetian Roses The Fantasy of You and I has been added\n",
      "Track Ceramic Flowers  & Sorim Byeon Zeta Retculi was not found\n",
      "Track Internazionale Blue Movement has been added\n",
      "Track Vanessa Amara Leopards, Pt. 1 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 2 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 3 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 4 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 5 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 6 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 7 has been added\n",
      "Track Vanessa Amara Leopards, Pt. 8 has been added\n",
      "Track Isorinne 4:55 has been added\n",
      "Track Kira Kira Beginning has been added\n",
      "Track Kira Kira Good Natures has been added\n",
      "Track Kira Kira A Miracle Is a Shift in Perception From Fear to Love has been added\n",
      "Track Venetian Roses Fantasia no. 6 has been added\n",
      "Track Venetian Roses Fantasia no. 4 has been added\n",
      "Track Exploded View Orlando has been added\n",
      "Track soft blade hope he'll never die has been added\n",
      "Track Burning Pyre Europa has been added\n",
      "Track Kira Kira Holding Space for the Unimaginable has been added\n",
      "Track Origin Unknown Valley of the Shadows has been added\n",
      "Track Answer Code Request Calm Down has been added\n",
      "Track Veljo Tormis How Can I Recognize My Home was not found\n",
      "Track Veljo Tormis Singing Aboard Ship has been added\n",
      "Track Veljo Tormis The Singer's Childhood has been added\n",
      "Track Aki Tsuyuko moriji has been added\n",
      "Track daisuke tanabe Lyon was not found\n",
      "Track neneng fitri sipatahunan was not found\n",
      "Track Rawfishboys Fengling has been added\n",
      "Track The Sirin Choir Sinful soul  has been added\n",
      "Track Soeur Marie Keyrouz Extraits du Canon de Samedi Saint : première stance was not found\n",
      "Track Soeur Marie Keyrouz Extraits du Canon de Samedi Saint : deuxième stance was not found\n",
      "Track Soeur Marie Keyrouz Extraits du Canon de Samedi Saint : troisième stance was not found\n",
      "Track Mikolaj Trzaska Prodaj Dinozaura has been added\n",
      "Track Giraffe Dog 351 Nation was not found\n",
      "Track Stéphane Blet Gnossiennes: No. 3, Lent has been added\n",
      "Track Chrono Cross Dead Sea: Tower of Geddon has been added\n",
      "Track derek jarman / donna mckevitt  sebastiane was not found\n",
      "Track Tracey Trance Feelin' The Sun has been added\n",
      "Track Zonlu Nemuru Mayu Sleeping Cocoon 068 was not found\n",
      "Track Tracey Trance Fountain 2 was not found\n",
      "Track Seiji Takahashi Gion was not found\n",
      "Track Michel Banabila Sound Years Side A has been added\n",
      "Track Aoki Takamasa, Tujiko Noriko 26th Floor has been added\n",
      "Track Andras Schiff & Yuuko Shiokawa Fantasie C-Dur fur Klavier D 760 (Wanderer-Fantasie) was not found\n",
      "Track arve henriksen / terje isungset  vassluke was not found\n",
      "Track Jan Steele  All Day was not found\n",
      "Track Kai Engel Oneiri has been added\n",
      "Track Lee Rosevere Thoughtful has been added\n",
      "Track Vanessa Amara I Lyver, Jeg Hustler has been added\n",
      "Track Anadol Görünmez Hava has been added\n",
      "Track Stéphane Blet Trois Gymnopédies: No. 1, Lent et douloureux has been added\n",
      "Track Nobukazu Takemura Kepler has been added\n",
      "Track Hiroshi Yoshimura Sleep has been added\n",
      "Track Digitonica A Flower of Remorse has been added\n",
      "Track Giuseppe Verdi Possente Fthà! has been added\n",
      "Track Dalhous Acceptance Is Reality was not found\n",
      "Track Stefan Thut amidst was not found\n",
      "Track Snail's House détour has been added\n",
      "Track Ekin Fil Like a Child has been added\n",
      "Track Mikkel Ploug / Sissel Vera Pettersen / Joachim Badenhorst Epiphora was not found\n",
      "Track Yikii Prière was not found\n",
      "Track Yikii Snowning Doomdream has been added\n",
      "Track Yikii plankton has been added\n",
      "Track Miroque Natural Sweet Mixer was not found\n",
      "Track Johann Sebastian Bach Brandenburg Concerto No. 2 in F Major, BWV 1047 : II. Andante (Lee Alexander McQueen, 1969 - 2010: Fashion Film - Nick Knight / Edward Enninful / Alexander McQueen) was not found\n",
      "Track Children of the Bolchoï Choir Shchedryk has been added\n",
      "Track dj lostboi if i should die was not found\n",
      "Track Jun Konagaya White Nacht was not found\n",
      "Track Yoko Takahashi Forbidden Gene was not found\n",
      "Track Tod Dockstader First Target has been added\n",
      "Track Toshifumi Hinata In the Light has been added\n",
      "Track Këkht Aräkh Love has been added\n",
      "Track Elfenblut Ruf aus der Einsamkeit was not found\n",
      "Track Randy Greif How Doth The Little Corcodile? was not found\n",
      "Track Michèle Bokanowski Cirque: I. Allegro en 3 parties was not found\n",
      "Track Yves Daoust Petite Musique Sentimentale was not found\n",
      "Track PGR Only Hell Burns Brighter was not found\n",
      "Track Jean-Michel Rivet Les Mains Brisées was not found\n",
      "Track Jean-Michel Rivet À Fleur De Quai was not found\n",
      "Track Sub Loam Unfolding - Opening The Path Of The Air was not found\n",
      "Track Шесть Мёртвых Болгар Ненецкая Оккупация (remastered) was not found\n",
      "Track Шесть Мёртвых Болгар Угол Атаки Уменьшить was not found\n",
      "Track Christian Zanési Adagio 2 was not found\n",
      "Track Christian Zanesi Jardin Sous L'eau was not found\n",
      "Track Internazionale Column Of Wild Rain was not found\n",
      "Track Old Tower The Rise of the Specter Part I was not found\n",
      "Track Old Tower Stellary Wisdom has been added\n",
      "Track Day Before Us / Nimh Surrounded by a Moonless Night was not found\n",
      "Track Deca Omega Doom was not found\n",
      "Track Joanna Pod... - Under... was not found\n",
      "Track Joanna Dzwonki - Bells was not found\n",
      "Track Joanna Kiedy Się Dziwić Przestanę... - When I Stop to Be Surprised... was not found\n",
      "Track Joanna Haiku 4 was not found\n",
      "Track Joanna Koniugacja - The Conjugation was not found\n",
      "Track Futuro Antico Arte Nelle Stelle was not found\n",
      "Track The Moon Lay Hidden Beneath A Cloud Untitled XXIV (The Smell Of Blood But Victory) was not found\n",
      "Track Yasuhito Fujinami Gray Days was not found\n",
      "Track Costin Miereanu Terre de Feu was not found\n",
      "Track Species Of Fishes Ktstrf0Rz/F1T/Rt was not found\n",
      "Track LEYA INTP has been added\n",
      "Track LEYA Flesh has been added\n",
      "Track Internazionale The Lovers Amassed On The Square has been added\n",
      "Track Internazionale Ode To A Thunderous Year was not found\n",
      "Track Internazionale The Opaline Dancer was not found\n",
      "Track Internazionale Icons was not found\n",
      "Track Internazionale The Hunter And The Fox was not found\n",
      "Track Internazionale Between Heart And Wind was not found\n",
      "Track Internazionale No Soldiers has been added\n",
      "Track Internazionale 24h was not found\n",
      "Track Internazionale Avatar In Life has been added\n",
      "Track Internazionale Wedge has been added\n",
      "Track Internazionale The Earth Is Generous has been added\n",
      "Track Internazionale East Coast Angels has been added\n",
      "Track Internazionale Life And Liberation has been added\n",
      "Track Internazionale Protection Glass has been added\n",
      "Track Internazionale Sorrow Is A Virtue has been added\n",
      "Track Internazionale The Pale And The Colourful has been added\n",
      "Track Internazionale Protection Glass (Love Is The Cure) is already added\n",
      "Track Internazionale They Taught Us To Count The Days has been added\n",
      "Track Internazionale Ruby Heart has been added\n",
      "Track Internazionale Initials has been added\n",
      "Track Loke Rahbek, Frederik Valentin Scarlett has been added\n",
      "Track Loke Rahbek, Frederik Valentin Solina has been added\n",
      "Track Loke Rahbek, Frederik Valentin Touch and Vision has been added\n",
      "Track X & Yde Dares Soar has been added\n",
      "Track DJ Ibon Sorgpad has been added\n",
      "Track Gel Scented has been added\n",
      "Track Schacke The End Of Ecstacy has been added\n",
      "Track ANIMA LACMIX016 was not found\n",
      "Track uuuut Без названия was not found\n",
      "Track 3532gs 5 was not found\n",
      "Track 3532gs 4 was not found\n",
      "Track 3532gs 1 was not found\n",
      "Track сны твоих мертвых друзей 1992 has been added\n",
      "Track сны твоих мёртвых друзей Vol.4 has been added\n",
      "Track сны твоих мёртвых друзей 02.01 has been added\n",
      "Track Placement & Adriva Geometry In Distant Agriculture was not found\n",
      "Track Placement & Adriva Where The Road Meets The Sky was not found\n",
      "Track Placement & Adriva Fields Like Cells was not found\n",
      "Track Placement & Adriva Stones And Soil was not found\n",
      "Track Paul Wirkus Himself was not found\n",
      "Track Vanessa Amara 09-03-2016 has been added\n",
      "Track Vanessa Amara 28-04-2016 has been added\n",
      "Track Vanessa Amara 03-03-2016 has been added\n",
      "Track Vanessa Amara 12-03-2016 has been added\n",
      "Track Vanessa Amara 05-03-2016 has been added\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Track Vanessa Amara 12-04-2016 has been added\n",
      "Track Vanessa Amara 15-03-2016 has been added\n",
      "Track Vanessa Amara 27-04-2016 has been added\n",
      "Track Vanessa Amara 07-04-2016 has been added\n",
      "Track Vanessa Amara 11-04-2016 has been added\n",
      "Track Vanessa Amara 01-03-2016 has been added\n",
      "Track Vanessa Amara 26-04-2016 has been added\n",
      "Track Vanessa Amara 08-04-2016 has been added\n",
      "Track Vanessa Amara 06-04-2016 has been added\n",
      "Track Vanessa Amara 29-04-2016 has been added\n",
      "Track Félicia Atkinson I’m Following You has been added\n",
      "Track Félicia Atkinson Monstera Deliciosa has been added\n",
      "Track Félicia Atkinson Hier Le Désert has been added\n",
      "Track Félicia Atkinson No Fear But Anticipation has been added\n",
      "Track Félicia Atkinson This Impermanent Gold has been added\n",
      "Track Félicia Atkinson The Owls has been added\n",
      "Track Meyers Inhaler I has been added\n",
      "Track Age Reform Shield Me From Death has been added\n",
      "Track Dalhous Zero Point Zero Six Per Cent has been added\n",
      "Track Dalhous Content for Feelings has been added\n",
      "Track Dalhous Research Network has been added\n",
      "Track Anna Peaker Helicidae has been added\n",
      "Track Naaahhh Empty Rituals has been added\n",
      "Track Dalhous Ecstasy As A Mask Or A Shield has been added\n",
      "Track тпсб Catching Rare Birds has been added\n",
      "Track тпсб The Grand Pacific Garbage Patch has been added\n",
      "Track тпсб Walking Distances has been added\n",
      "Track тпсб Quicksand has been added\n",
      "Track тпсб Matted Feathers has been added\n",
      "Track тпсб Pacifier Habits has been added\n",
      "Track тпсб Are You Still Hurt has been added\n",
      "Track Ian Martin  Missing Realism was not found\n",
      "Track Nagamatzu Watch And Waste has been added\n",
      "Track Nagamatzu Ionesco has been added\n",
      "Track Basilikos New Alliance was not found\n",
      "Track Ruth Walser, Barbara Müller-Hämmerli Ein Schlummer (A Slumber) has been added\n",
      "Track Ballista Heaven's Gate was not found\n",
      "Track Ballista A Man's Body Is His Currency was not found\n",
      "Track Ziyek A has been added\n",
      "Track Ziyek B has been added\n",
      "Track Gersemi Side B was not found\n",
      "Track Tevere Trebuchet was not found\n",
      "Track Internazionale Monika was not found\n",
      "Track Mercury Ribbon Emmanuel was not found\n",
      "Track Mercury Ribbon Bronze was not found\n",
      "Track internazionale sex and generosity was not found\n",
      "Track Internazionale Pantheon Of Sperm was not found\n",
      "Track slanlslll ambient 2.0 was not found\n",
      "Track slanlslll take me to the land of jazz was not found\n",
      "Track slanlslll sweetmadness was not found\n",
      "Track slanlslll love me tender was not found\n",
      "Track slanlslll cherche la rose was not found\n",
      "Track J. De Sosa No Homeland has been added\n",
      "Track J. De Sosa False Colors has been added\n",
      "Track Appropriate Savagery For the Victories to Come (A Personal Letter) has been added\n",
      "Track Appropriate Savagery Makeup & Ketamine, During a Quiet Evening has been added\n",
      "Track Appropriate Savagery Fragment I, Your Decline / His Triomph has been added\n",
      "Track Appropriate Savagery Condescension, Expressed as a Revenge has been added\n",
      "Track Appropriate Savagery Spatters of Paint, Bloody Wrist has been added\n",
      "Track Appropriate Savagery To Finally Reach the Divine (Salvation's Myth) has been added\n",
      "Track Appropriate Savagery With Shame, in a Period of Dementia has been added\n",
      "Track Appropriate Savagery Fragment Ii, Two Canvases but a Single Brush has been added\n",
      "Track Appropriate Savagery Open Wounds, Artificial Enemies has been added\n",
      "Track Appropriate Savagery But You Treasure Your Sins (Ancient Relics) has been added\n",
      "Track Hiroshi Yoshimura Signal F was not found\n",
      "Track Hiroshi Yoshimura Signal F was not found\n",
      "Track Loke Rahbek Palm has been added\n",
      "Track Lunar Womb The Labyrinths of Ktonor was not found\n",
      "Track Lunar Womb Oinen Matkaaja was not found\n",
      "Track Lunar Womb Through Ages was not found\n",
      "Track Genoasejlet Untitled was not found\n",
      "Track Ballista Restitution II was not found\n",
      "Track Ballista Song #3 For G.B. was not found\n",
      "Track Mercury Ribbon Little Brother was not found\n",
      "Track Truce Prosecution Of Love was not found\n",
      "Track Manon Lescaut A Garland For Her Head was not found\n",
      "Track O. Vaupel Vajra was not found\n",
      "Track Liberty Uganda The Well Offers Fortune was not found\n",
      "Track Paw Grabowski Untitled 15 was not found\n",
      "Track Paw Grabowski Untitled 13 was not found\n",
      "Track Paw Grabowski Untitled 11 was not found\n",
      "Track Paw Grabowski Untitled 8 was not found\n",
      "Track Paw Grabowski Untitled 3 has been added\n",
      "Track Paw Grabowski Untitled 4 has been added\n",
      "Track Paw Grabowski Untitled 2 has been added\n",
      "Track Paw Grabowski Untitled 9 was not found\n",
      "Track Telluric Current Halcyon Weights was not found\n",
      "Track Tevere Origins was not found\n",
      "Track Rerekat Our Bones Are Dried Up has been added\n",
      "Track Minais B I Think Most People Here Know has been added\n",
      "Track Dedekind Cut  Conversations with angels has been added\n",
      "Track Appropriate Savagery Derealizations, Whispers of Your Guardian (Behavioral Study) has been added\n",
      "Track Appropriate Savagery Self Esteem, Deconstruction of a Concept (Part 1-3) was not found\n",
      "Track Appropriate Savagery Staring the Liquor (Obsessive Thoughts) has been added\n",
      "Track Appropriate Savagery Slowly Erasing His Presence (Patience & Complacency) has been added\n",
      "Track Appropriate Savagery In Front of the Golden Faces (Give Them Some Hope) has been added\n",
      "Track afx T16.5 MADMA with nastya+5.2 was not found\n",
      "Track Fåntratt Somna av i Snödrivan i Värmen av Den Stora Julgroggen was not found\n",
      "Track Fåntratt Saknad och Hänsoven, Björn-Erik Lundmark was not found\n",
      "Track Vatican Shadow Weapons Inspection has been added\n",
      "Track Vatican Shadow Chopper Crash Marines’ Names Released has been added\n",
      "Track Filmmaker Encounters has been added\n"
     ]
    }
   ],
   "source": [
    "v = int(input(f'Do you want to move songs from VK by liking [1] or by saving them to a separate playlist [2]? >'\n",
    "))\n",
    "summary = {'Artist': [], 'Title': [], 'Status': [], 'Artist ID': []}\n",
    "ID = []\n",
    "\n",
    "if v == 1:\n",
    "    for i in tracks:\n",
    "        br.find_element(By.TAG_NAME, 'input').send_keys(f'{i[0]} {i[1]}')\n",
    "        time.sleep(1.3)\n",
    "        r = br.page_source\n",
    "        soup = BeautifulSoup(r, \"html.parser\")\n",
    "        try:\n",
    "            foundtrack() == i\n",
    "            try:\n",
    "                like()\n",
    "                summary['Artist'].append(soup.find_all('a', {'draggable':'true'})[0].text)\n",
    "                summary['Title'].append(br.find_element(By.XPATH, '//div[@class=\"t_yrXoUO3qGsJS4Y6iXX standalone-ellipsis-one-line w_Xs9cRXMwmQHw8BpiID\"]').text)\n",
    "                summary['Status'].append(f'Added')\n",
    "                summary['Artist ID'].append(artistID())\n",
    "                ID.append(artistID())\n",
    "                print(f'Track {i[0]} {i[1]} has been added')\n",
    "\n",
    "            \n",
    "            except NoSuchElementException:\n",
    "                summary['Artist'].append(f'{i[0]}')\n",
    "                summary['Title'].append(f'{i[1]}')\n",
    "                summary['Status'].append(f'Already added')\n",
    "                summary['Artist ID'].append(artistID())\n",
    "                print(f'Track {i[0]} {i[1]} is already added')\n",
    "            pass\n",
    "            \n",
    "        except IndexError:\n",
    "            print(f'Track {i[0]} {i[1]} was not found')\n",
    "            summary['Artist'].append(f'{i[0]}')\n",
    "            summary['Title'].append(f'{i[1]}')\n",
    "            summary['Status'].append(f'Not found')\n",
    "            summary['Artist ID'].append('0x00000001')\n",
    "            pass\n",
    "        clear()\n",
    "        time.sleep(0.5)\n",
    "else:\n",
    "    pass\n",
    "\n",
    "if v == 2:\n",
    "    summary = {'Artist': [], 'Title': [], 'Status': [], 'Artist ID': []}\n",
    "    ID = []\n",
    "    n = 0\n",
    "\n",
    "    for i in tracks:\n",
    "            br.find_element(By.TAG_NAME, 'input').send_keys(f'{i[0]} {i[1]}')\n",
    "            time.sleep(1.6)\n",
    "            r = br.page_source\n",
    "            soup = BeautifulSoup(r, \"html.parser\")\n",
    "            try:\n",
    "                foundtrack() == i\n",
    "                try:\n",
    "                    like1()\n",
    "            \n",
    "                except NoSuchElementException:\n",
    "                    n = n + 1\n",
    "                pass\n",
    "            \n",
    "            except IndexError:\n",
    "                print(f'Track {i[0]} {i[1]} was not found')\n",
    "                summary['Artist'].append(f'{i[0]}')\n",
    "                summary['Title'].append(f'{i[1]}')\n",
    "                summary['Status'].append(f'Not found')\n",
    "                summary['Artist ID'].append('0x00000001')\n",
    "                pass\n",
    "            clear()\n",
    "            time.sleep(0.3)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "e3d8cbff",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Artist</th>\n",
       "      <th>Title</th>\n",
       "      <th>Status</th>\n",
       "      <th>Artist ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>seabat</td>\n",
       "      <td>side a</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Sozialistisches Patienten Kollektiv</td>\n",
       "      <td>Slogun</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sozialistisches Patienten Kollektiv</td>\n",
       "      <td>Mekano</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sozialistisches Patienten Kollektiv</td>\n",
       "      <td>Post-Mortem</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>проекции</td>\n",
       "      <td>свечение II</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>Leven Signs</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>Leven Signs</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>MACHINEFABRIEK</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>MACHINEFABRIEK</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>Michel Banabila</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Artist        Title     Status   Artist ID\n",
       "0                                 seabat       side a  Not found  0x00000001\n",
       "1    Sozialistisches Patienten Kollektiv       Slogun  Not found  0x00000001\n",
       "2    Sozialistisches Patienten Kollektiv       Mekano  Not found  0x00000001\n",
       "3    Sozialistisches Patienten Kollektiv  Post-Mortem  Not found  0x00000001\n",
       "4                               проекции  свечение II  Not found  0x00000001\n",
       "..                                   ...          ...        ...         ...\n",
       "113                          Leven Signs         None       None        None\n",
       "114                          Leven Signs         None       None        None\n",
       "115                       MACHINEFABRIEK         None       None        None\n",
       "116                       MACHINEFABRIEK         None       None        None\n",
       "117                      Michel Banabila         None       None        None\n",
       "\n",
       "[118 rows x 4 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ID = summary['Artist ID']\n",
    "df = pd.DataFrame.from_dict(summary, orient='index')\n",
    "df = df.transpose()\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c070936d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a1f1e57",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b470869",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "989355e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "br.execute_script(\"window.open('https://developer.spotify.com/console/get-artist/','_blank');\")\n",
    "br.switch_to.window(br.window_handles[1])\n",
    "r = br.page_source\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2e03a182",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cookies():\n",
    "    return len(br.find_elements(By.XPATH, '//button[@class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\"]'))\n",
    "\n",
    "def token():\n",
    "    if (br.find_element(By.XPATH, '//input[@class=\"form-control\" and @placeholder=\"OAuth Access Token\"]').get_attribute('value') == ''):\n",
    "        br.find_element(By.XPATH, '//button[@class=\"btn btn-green\"]').click()\n",
    "        time.sleep(0.5)\n",
    "        br.find_element(By.XPATH, '//input[@type=\"submit\"]').click()\n",
    "        time.sleep(0.5)\n",
    "        if len(br.find_elements(By.XPATH, '//button[@id=\"auth-accept\" and @class=\"auth-allow btn btn-green ng-binding\"]')) == 1:\n",
    "            br.find_element(By.XPATH, '//button[@id=\"auth-accept\" and @class=\"auth-allow btn btn-green ng-binding\"]').click()\n",
    "\n",
    "\n",
    "\n",
    "def id_check():\n",
    "    for i in ID:\n",
    "        if i != '0x00000001':\n",
    "            br.find_element(By.XPATH, '//input[@class=\"form-control\" and @type=\"text\" and @id=\"path-param-id\"]').send_keys(i)\n",
    "            if cookies() == 0:\n",
    "                pass\n",
    "            else:\n",
    "                br.find_element(By.XPATH, '//button[@                           class=\"onetrust-close-btn-handler onetrust-close-btn-ui banner-close-button ot-close-icon\"]').click()\n",
    "            token()\n",
    "            br.find_element(By.XPATH, '//button[@type=\"submit\" and @class=\"btn btn-sm btn-primary\"]').click()\n",
    "            time.sleep(0.5)\n",
    "            if br.find_element(By.XPATH, '//div[@id=\"response-body\"]').text.split('\"')[15] == 'href':\n",
    "                summary['Genre'].append('underground')\n",
    "                print('underground')\n",
    "            else:\n",
    "                summary['Genre'].append(br.find_element(By.XPATH, '//div[@id=\"response-body\"]').text.split('\"')[15])\n",
    "                print(summary['Genre'][-1])\n",
    "            br.find_element(By.XPATH, '//input[@class=\"form-control\" and @type=\"text\" and @id=\"path-param-id\"]').clear()\n",
    "        else:\n",
    "            summary['Genre'].append(None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3c762c26",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "deconstructed club\n",
      "underground\n",
      "minimal synth\n",
      "danish experimental\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "new isolationism\n",
      "folktronica\n",
      "folktronica\n",
      "folktronica\n",
      "minimal synth\n",
      "minimal synth\n",
      "chamber psych\n",
      "russian alt pop\n",
      "new isolationism\n",
      "folktronica\n",
      "drum and bass\n",
      "float house\n",
      "baltic classical\n",
      "baltic classical\n",
      "underground\n",
      "underground\n",
      "underground\n",
      "polish jazz\n",
      "classical\n",
      "japanese vgm\n",
      "underground\n",
      "japanese electronic\n",
      "dutch experimental\n",
      "glitch\n",
      "underground\n",
      "underground\n",
      "ambient\n",
      "underground\n",
      "classical\n",
      "glitch\n",
      "ambient\n",
      "underground\n",
      "classical\n",
      "future bass\n",
      "experimental synth\n",
      "chinese electronic\n",
      "chinese electronic\n",
      "underground\n",
      "acousmatic\n",
      "japanese soundtrack\n",
      "atmospheric black metal\n",
      "dungeon synth\n",
      "ambient pop\n",
      "ambient pop\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish techno\n",
      "russian post-punk\n",
      "russian post-punk\n",
      "russian post-punk\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "ambient\n",
      "modern electroacoustic\n",
      "underground\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "underground\n",
      "underground\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "ambient techno\n",
      "british experimental\n",
      "british experimental\n",
      "wandelweiser\n",
      "afro soul\n",
      "maskandi\n",
      "underground\n",
      "underground\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "danish experimental\n",
      "underground\n",
      "danish experimental\n",
      "underground\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "dark ambient\n",
      "ambient techno\n",
      "ambient techno\n",
      "colombian electronic\n"
     ]
    }
   ],
   "source": [
    "summary['Genre'] = [] \n",
    "id_check()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e7c163a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "cd0bb334",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Artist</th>\n",
       "      <th>Title</th>\n",
       "      <th>Status</th>\n",
       "      <th>Artist ID</th>\n",
       "      <th>Genre</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>oqbqbo</td>\n",
       "      <td>Night Perfume</td>\n",
       "      <td>Added</td>\n",
       "      <td>0sxuAo23kwvWKzFmJpLHmw</td>\n",
       "      <td>deconstructed club</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ballista</td>\n",
       "      <td>Vanitas</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Copiale</td>\n",
       "      <td>Shelter</td>\n",
       "      <td>Added</td>\n",
       "      <td>1i95FENYub8fLcKzIQgilr</td>\n",
       "      <td>underground</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Venetian Roses</td>\n",
       "      <td>The Fantasy of You and I</td>\n",
       "      <td>Added</td>\n",
       "      <td>5eBjnCRJRhOAQ0KN1f6M6N</td>\n",
       "      <td>minimal synth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ceramic Flowers  &amp; Sorim Byeon</td>\n",
       "      <td>Zeta Retculi</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Fåntratt</td>\n",
       "      <td>Somna av i Snödrivan i Värmen av Den Stora Jul...</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>Fåntratt</td>\n",
       "      <td>Saknad och Hänsoven, Björn-Erik Lundmark</td>\n",
       "      <td>Not found</td>\n",
       "      <td>0x00000001</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>Vatican Shadow</td>\n",
       "      <td>Weapons Inspection</td>\n",
       "      <td>Added</td>\n",
       "      <td>1b6p8KZ14dw35fuIuDWQNV</td>\n",
       "      <td>ambient techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>Vatican Shadow</td>\n",
       "      <td>Chopper Crash Marines' Names Released</td>\n",
       "      <td>Added</td>\n",
       "      <td>1b6p8KZ14dw35fuIuDWQNV</td>\n",
       "      <td>ambient techno</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>Filmmaker</td>\n",
       "      <td>Encounters</td>\n",
       "      <td>Added</td>\n",
       "      <td>2V2SmuR8XmWsKjGzTSk6Hp</td>\n",
       "      <td>colombian electronic</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Artist  \\\n",
       "0                            oqbqbo   \n",
       "1                          Ballista   \n",
       "2                           Copiale   \n",
       "3                    Venetian Roses   \n",
       "4    Ceramic Flowers  & Sorim Byeon   \n",
       "..                              ...   \n",
       "248                        Fåntratt   \n",
       "249                        Fåntratt   \n",
       "250                  Vatican Shadow   \n",
       "251                  Vatican Shadow   \n",
       "252                       Filmmaker   \n",
       "\n",
       "                                                 Title     Status  \\\n",
       "0                                        Night Perfume      Added   \n",
       "1                                              Vanitas  Not found   \n",
       "2                                              Shelter      Added   \n",
       "3                             The Fantasy of You and I      Added   \n",
       "4                                         Zeta Retculi  Not found   \n",
       "..                                                 ...        ...   \n",
       "248  Somna av i Snödrivan i Värmen av Den Stora Jul...  Not found   \n",
       "249           Saknad och Hänsoven, Björn-Erik Lundmark  Not found   \n",
       "250                                 Weapons Inspection      Added   \n",
       "251              Chopper Crash Marines' Names Released      Added   \n",
       "252                                         Encounters      Added   \n",
       "\n",
       "                  Artist ID                 Genre  \n",
       "0    0sxuAo23kwvWKzFmJpLHmw    deconstructed club  \n",
       "1                0x00000001                  None  \n",
       "2    1i95FENYub8fLcKzIQgilr           underground  \n",
       "3    5eBjnCRJRhOAQ0KN1f6M6N         minimal synth  \n",
       "4                0x00000001                  None  \n",
       "..                      ...                   ...  \n",
       "248              0x00000001                  None  \n",
       "249              0x00000001                  None  \n",
       "250  1b6p8KZ14dw35fuIuDWQNV        ambient techno  \n",
       "251  1b6p8KZ14dw35fuIuDWQNV        ambient techno  \n",
       "252  2V2SmuR8XmWsKjGzTSk6Hp  colombian electronic  \n",
       "\n",
       "[253 rows x 5 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame.from_dict(summary, orient='index')\n",
    "df = df.transpose()\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "24e47df4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0a3a1eff",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "86b75689",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Top-6 Genre Frequencies'}>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Genre'].value_counts().iloc[0:6].plot(kind='bar', title='Top-6 Genre Frequencies', fontsize = 15, xlim = 14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ed444850",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Summary'}>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Status'].value_counts().plot(kind='bar', title='Summary', fontsize = 15, xlim = 14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7cd1f383",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bfa22c9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ffea38a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
